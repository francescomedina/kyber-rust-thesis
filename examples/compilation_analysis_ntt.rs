#![no_main]
#![no_std]

use panic_halt as _;
use cortex_m_rt::{entry, exception};

use stm32f4xx_hal;

use pqc_kyber::ntt;

#[entry]
unsafe fn main() -> ! {
    let mut r: [i16; 256] = [1, -2, 2, 1, -2, 2, -1, -1, -2, -1, 1, 1, 1, -1, 0, -1, -1, -2, -2, 0, -2, -1, 2, 1, -1, 2, -2, 2, -2, 2, -1, 0, 2, 0, -2, -2, 1, 2, 1, 0, 1, -1, 0, -2, -2, 0, -1, 0, -2, -2, 1, 2, -1, 0, 2, 1, -2, -1, 1, 0, 2, 1, 2, -2, 2, -2, 2, 0, 1, 2, 1, -2, 2, -1, 1, -2, -2, 2, 0, 1, 2, 0, -2, 2, 1, -2, 0, 2, -2, -2, 2, -1, 1, 0, 0, -1, 0, -1, 1, 1, -1, -1, 2, 0, 2, 0, 1, 2, -2, -1, 1, 2, 2, 0, -2, 2, -1, 1, 1, 0, 0, -2, 2, -2, 2, -2, -1, 0, -2, -1, -2, 2, 2, -1, 2, 2, -1, 1, 2, -1, 1, -2, -1, 1, 1, -1, 2, 2, 2, -1, -2, 1, 2, 1, 0, -2, 1, 0, -2, -1, 2, -1, 0, 0, 0, -1, -1, -1, 2, 2, 0, 2, -2, 1, 0, -2, -1, 1, -1, 2, -2, 1, 1, 2, 1, 1, 2, -2, -1, -1, -1, -2, 1, -1, 2, -2, 1, 0, 1, -1, 0, -2, 2, 1, 0, -1, -1, 2, 0, -2, 0, -2, 1, 2, 2, -1, -1, -1, 0, 2, 1, 1, 2, 0, 0, 1, 0, -1, -2, 2, -1, 1, 1, 0, -2, 0, 0, 2, -2, -1, 2, 2, 1, -1, -1, -2, -1, 0, 1, -2, 1, 1, 1, -1, -1, 0];
    ntt(&mut r);
    loop {}
}


#[exception]
#[allow(non_snake_case)]
fn SysTick() {
    
}